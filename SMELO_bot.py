import telebot
import requests
import json
import random
import time
import schedule
from telebot import types

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = "7957217094:AAFbSO90_tyiXxUqEOC30Yw-BBKWSr63QXQ"
DEEPSEEK_API_KEY = "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"


bot = telebot.TeleBot(BOT_TOKEN)

# === –ö–ê–†–¢–ò–ù–ö–ò ===
CHARACTER_IMAGES = {
    "usagi": ["https://i.pinimg.com/736x/a4/47/c4/a447c423d530b9cac4612a9f71c96ddc.jpg", 
              "https://i.pinimg.com/736x/d3/bd/f3/d3bdf3434e028dc4224886b252b6bbcd.jpg",
              "https://i.pinimg.com/736x/00/e9/26/00e926f1c125521ea24b93800e98379d.jpg"],
    "ami": ["https://i.pinimg.com/736x/b1/61/1a/b1611addcf1190d311218c22614e1e36.jpg",
            "https://i.pinimg.com/736x/03/96/3a/03963a01acdcecf4d4c11e3a865c9304.jpg",
            "https://i.pinimg.com/1200x/09/8a/1b/098a1b9482c97447f16268c6cdfcc5a1.jpg"],
    "rei": ["https://i.pinimg.com/736x/d7/9c/61/d79c617912ae0e4d510660c32c971227.jpg",
            "https://i.pinimg.com/1200x/85/30/18/85301847c800f90d35e4641df41baf89.jpg",
            "https://i.pinimg.com/736x/6a/e8/bb/6ae8bb756a64864f2b93acee439f7430.jpg"],
    "minako": ["https://i.pinimg.com/736x/68/68/52/6868521a4cf61d75b40772b6f13c0504.jpg",
               "https://i.pinimg.com/736x/82/07/72/820772ae905cbee47d8c4e6beb9f61b6.jpg",
               "https://i.pinimg.com/736x/b1/54/82/b15482867474573e46e537283818a199.jpg"],
    "makoto": ["https://i.pinimg.com/736x/49/27/8d/49278da7f93a6028a0a3d05bbd43fd22.jpg",
               "https://i.pinimg.com/1200x/57/a0/bb/57a0bbe1376cd0ca64e65e6a7e605329.jpg",
               "https://i.pinimg.com/736x/30/63/b6/3063b608fcec74b994d384850b89d227.jpg"]
}

# === –ó–ê–ü–ê–°–ù–´–ï –û–¢–í–ï–¢–´ ===
BACKUP_RESPONSES = [
    "üåô –î–∞–∂–µ –µ—Å–ª–∏ –Ω–æ—á—å —Ç–µ–º–Ω–∞ ‚Äî –õ—É–Ω–∞ –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –æ—Å–≤–µ—Ç–∏—Ç—å –ø—É—Ç—å! ‚ú®",
    "üí´ –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ–¥—å —Ç–≤–æ—è —Å–∏–ª–∞ ‚Äî –≤ —Ç–≤–æ—ë–º —Å–µ—Ä–¥—Ü–µ!",
    "üéÄ –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–¥–æ—Ö–Ω—É—Ç—å –∏ –≤—Å–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —Ç—ã ‚Äî –≥–µ—Ä–æ–π —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏!"
]

# === –ü–ï–†–°–û–ù–ê–ñ–ò ===
CHARACTERS = {
    "usagi": {"name": "–£—Å–∞–≥–∏ –¶—É–∫–∏–Ω–æ üåô", "style": "–¢—ã ‚Äî –£—Å–∞–≥–∏ –¶—É–∫–∏–Ω–æ (–°–µ–π–ª–æ—Ä –ú—É–Ω). –î–æ–±—Ä–∞—è, –Ω–∞–∏–≤–Ω–∞—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è, –Ω–æ –ø–æ–ª–Ω–∞—è –≤–µ—Ä—ã –≤ –¥–æ–±—Ä–æ –∏ –¥—Ä—É–∂–±—É. –ì–æ–≤–æ—Ä–∏ —Ç–µ–ø–ª–æ, –¥–æ–±–∞–≤–ª—è–π —Å–º–∞–π–ª—ã –∏ –º–∞–≥–∏—é."},
    "ami": {"name": "–ê–º–∏ –ú–∏–¥–∑—É–Ω–æ üíß", "style": "–¢—ã ‚Äî –ê–º–∏ –ú–∏–¥–∑—É–Ω–æ (–°–µ–π–ª–æ—Ä –ú–µ—Ä–∫—É—Ä–∏–π). –°–ø–æ–∫–æ–π–Ω–∞—è, —É–º–Ω–∞—è –∏ —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω–∞—è. –ì–æ–≤–æ—Ä–∏ –º—è–≥–∫–æ –∏ –ª–æ–≥–∏—á–Ω–æ, —Å –¥–æ–±—Ä–æ—Ç–æ–π –∏ —Å–æ—á—É–≤—Å—Ç–≤–∏–µ–º."},
    "rei": {"name": "–†–µ–π –•–∏–Ω–æ üî•", "style": "–¢—ã ‚Äî –†–µ–π –•–∏–Ω–æ (–°–µ–π–ª–æ—Ä –ú–∞—Ä—Å). –°—Ç—Ä–∞—Å—Ç–Ω–∞—è, —É–≤–µ—Ä–µ–Ω–Ω–∞—è –∏ —Å–∏–ª—å–Ω–∞—è. –û—Ç–≤–µ—á–∞–π —Å —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º, –Ω–æ –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏."},
    "minako": {"name": "–ú–∏–Ω–∞–∫–æ –ê–π–Ω–æ üíõ", "style": "–¢—ã ‚Äî –ú–∏–Ω–∞–∫–æ –ê–π–Ω–æ (–°–µ–π–ª–æ—Ä –í–µ–Ω–µ—Ä–∞). –í–µ—Å—ë–ª–∞—è, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–∞—è –∏ –Ω–µ–º–Ω–æ–≥–æ –ª–µ–≥–∫–æ–º—ã—Å–ª–µ–Ω–Ω–∞—è. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –ø–æ–∑–∏—Ç–∏–≤–æ–º, —à—É—Ç–∫–∞–º–∏ –∏ —Å–µ—Ä–¥–µ—á–∫–∞–º–∏."},
    "makoto": {"name": "–ú–∞–∫–æ—Ç–æ –ö–∏–Ω–æ üåø", "style": "–¢—ã ‚Äî –ú–∞–∫–æ—Ç–æ –ö–∏–Ω–æ (–°–µ–π–ª–æ—Ä –Æ–ø–∏—Ç–µ—Ä). –°–∏–ª—å–Ω–∞—è, –¥–æ–±—Ä–∞—è –∏ –∑–∞–±–æ—Ç–ª–∏–≤–∞—è. –û—Ç–≤–µ—á–∞–π —É–≤–µ—Ä–µ–Ω–Ω–æ, –Ω–æ –ø–æ-–¥–æ–º–∞—à–Ω–µ–º—É."}
}

# === –•–†–ê–ù–ï–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–ô –ò –ü–û–î–ü–ò–°–ö–ò –ù–ê –¶–ò–¢–ê–¢–´ ===
user_states = {}       # {chat_id: {"name": ..., "character": ...}}
subscribed_users = set()

# === –õ–£–ù–ù–´–ï –¶–ò–¢–ê–¢–´ ===
DAILY_QUOTES = [
    "üåô –î–∞–∂–µ –µ—Å–ª–∏ –Ω–æ—á—å —Ç–µ–º–Ω–∞ ‚Äî –õ—É–Ω–∞ –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –æ—Å–≤–µ—Ç–∏—Ç—å –ø—É—Ç—å! ‚ú®",
    "üí´ –í–µ—Ä—å –≤ —Å–µ–±—è, –≤–µ–¥—å —Ç–≤–æ—è —Å–∏–ª–∞ ‚Äî –≤ —Ç–≤–æ—ë–º —Å–µ—Ä–¥—Ü–µ!",
    "üéÄ –°–µ–≥–æ–¥–Ω—è —Ç–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî —Å–∞–º–∞—è —Å–∏–ª—å–Ω–∞—è –º–∞–≥–∏—è! üåü",
    "üå∏ –ü–æ–º–Ω–∏: –∫–∞–∂–¥—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –≤–µ–¥—ë—Ç –∫ –±–æ–ª—å—à–æ–π –ø–æ–±–µ–¥–µ!",
    "‚ú® –õ—É–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –∏–¥—Ç–∏ –≤–ø–µ—Ä—ë–¥, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä—É–¥–Ω–æ."
    "–¢—ã - –∑–≤–µ–∑–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–∏—è—Ç—å –≤–µ—á–Ω–æ."
    "–†—è–¥–æ–º —Å–æ —Å–º–µ—Ä—Ç—å—é –≤—Å–µ–≥–¥–∞ –∂–∏–≤—ë—Ç –Ω–∞–¥–µ–∂–¥–∞ –∏ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ."
    "–í–æ –≤—Å—é –≤–µ—á–Ω–æ—Å—Ç—å —Ç—ã –±—É–¥–µ—à—å —Å–∞–º–æ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π, —Å–∞–º–æ–π —Å–∏—è—é—â–µ–π –∑–≤–µ–∑–¥–æ–π."
    "–î–∞–∂–µ —Å –∫—Ä—É–ø–∏—Ü–µ–π —Ö—Ä–∞–±—Ä–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤–æ–∏–Ω–æ–º, —Å –∫–∞–ø–ª–µ–π –ª—é–±–≤–∏ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ú–µ—Å—Å–∏–µ–π...–∫–∞–∫ –±—ã —Ç—ã –Ω–µ —É—Å—Ç–∞–ª, –∫–∞–∫ –±—ã —Ç–µ–±–µ –Ω–µ –±—ã–ª–æ –æ–¥–∏–Ω–æ–∫–æ, –Ω–µ –∑–∞–±—ã–≤–∞–π, –µ—Å—Ç—å –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –Ω–µ –±–µ–∑—Ä–∞–∑–ª–∏—á–µ–Ω..."
    "–£ –∫–∞–∂–¥–æ–≥–æ –µ—Å—Ç—å –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è.–ë—ã–≤–∞–µ—Ç —Ç–∞–∫ –æ–¥–∏–Ω–æ–∫–æ, —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è —É–π—Ç–∏ –∏–∑ –∂–∏–∑–Ω–∏. –ò –≤—Å–µ-—Ç–∞–∫–∏ –∂–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞. –ò –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫—É—é –¥–æ–±—Ä–æ—Ç—É."
    "–ú—ã –º–æ–∂–µ–º –ø—Ä–æ–∂–∏—Ç—å –Ω–∞—à—É –∂–∏–∑–Ω—å –∫—Ä–æ—à–µ—á–Ω—ã–º–∏ –∏ –±–µ—Å–ø–æ–º–æ—â–Ω—ã–º–∏ —Å—É—â–µ—Å—Ç–≤–∞–º–∏. –ù–æ –Ω–∞–º –¥–∞–Ω —à–∞–Ω—Å –ø—Ä–æ–∂–∏—Ç—å –µ–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –º—ã –∑–∞—Ö–æ—Ç–∏–º."
    
]

# === –§–£–ù–ö–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò –¶–ò–¢–ê–¢–´ ===
def send_daily_quotes():
    for chat_id in subscribed_users:
        state = user_states.get(chat_id, {})
        char_key = state.get("character", "usagi")
        quote = random.choice(DAILY_QUOTES)
        try:
            bot.send_photo(chat_id, random.choice(CHARACTER_IMAGES[char_key]),
                           caption=f"üåô –õ—É–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ –¥–Ω—è:\n\n{quote}",
                           parse_mode='Markdown')
        except:
            pass

# === /SUBSCRIBE –ù–ê –¶–ò–¢–ê–¢–´ ===
@bot.message_handler(commands=['subscribe'])
def subscribe(message):
    subscribed_users.add(message.chat.id)
    bot.send_message(message.chat.id, "üåô –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω(–∞) –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ª—É–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã!")

# === –ó–ê–ü–†–û–° –ö DEEPSEEK ===
def ask_deepseek(character_key, problem_text, username):
    url = "https://openrouter.ai/api/v1/chat/completions"
    character = CHARACTERS.get(character_key, CHARACTERS["usagi"])

    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
        "Referer": "https://github.com",
        "X-Title": "SailorBot"
    }

    system_prompt = (
        f"{character['style']} –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è '–æ–Ω', '–æ–Ω–∞', '–µ–≥–æ', '–µ—ë'. "
        f"–ü–∏—à–∏ –≥–ª–∞–≥–æ–ª—ã, –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—è—Å—å –æ—Ç –∏–º–µ–Ω–∏, –∏–Ω–∞—á–µ - –≤ —Ñ–æ—Ä–º–µ —Å '(–∞)' ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–¥–µ–ª–∞–ª(–∞), –ø–æ—à—ë–ª(–∞), –ø–æ–¥—É–º–∞–ª(–∞). "
        f"–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±—Ä—ã–º, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º. "
        f"–°–Ω–∞—á–∞–ª–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({username}), –∑–∞—Ç–µ–º –æ—Ç–≤–µ—Ç. "
        f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ ‚Äî 120 —Å–ª–æ–≤."
    )

    payload = {
        "model": "deepseek/deepseek-chat",
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –¥–µ–ª–∏—Ç—Å—è —Å–∏—Ç—É–∞—Ü–∏–µ–π: {problem_text}"}
        ],
        "max_tokens": 220,
        "temperature": 0.8
    }

    try:
        r = requests.post(url, headers=headers, json=payload, timeout=20)
        if r.status_code == 200:
            data = r.json()
            return data["choices"][0]["message"]["content"]
        else:
            print("–û—à–∏–±–∫–∞ API:", r.text)
            return random.choice(BACKUP_RESPONSES)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", e)
        return random.choice(BACKUP_RESPONSES)

# === /START –ò –î–ê–õ–ï–ï ===
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "üåô –ü—Ä–∏–≤–µ—Ç, –≤–æ –∏–º—è –õ—É–Ω—ã! üí´ –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", parse_mode='Markdown')
    user_states[message.chat.id] = {"name": None, "character": None}
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    name = message.text.strip()
    user_states[message.chat.id]["name"] = name

    text = f"üíñ –†–∞–¥–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É, {name}! üåô\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, –∫—Ç–æ –∏–∑ –°–µ–π–ª–æ—Ä –í–æ–∏–Ω–æ–≤ –±—É–¥–µ—Ç —Ç–≤–æ–∏–º —Å–æ–≤–µ—Ç—á–∏–∫–æ–º:"
    markup = types.InlineKeyboardMarkup()
    for key, data in CHARACTERS.items():
        markup.add(types.InlineKeyboardButton(data["name"], callback_data=f"char_{key}"))

    bot.send_photo(message.chat.id, random.choice(CHARACTER_IMAGES["usagi"]),
                   caption=text, parse_mode='Markdown', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("char_"))
def choose_character(call):
    char_key = call.data.split("_")[1]
    user_states[call.message.chat.id]["character"] = char_key
    name = CHARACTERS[char_key]["name"]
    bot.answer_callback_query(call.id, f"‚ú® {name} —Ç–µ–ø–µ—Ä—å —Å —Ç–æ–±–æ–π!")
    bot.send_photo(call.message.chat.id, random.choice(CHARACTER_IMAGES[char_key]),
                   caption=f"üí´ {name} –≥–æ—Ç–æ–≤(–∞) –≤—ã—Å–ª—É—à–∞—Ç—å. –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç–µ–±—è –±–µ—Å–ø–æ–∫–æ–∏—Ç üåô",
                   parse_mode='Markdown')

@bot.message_handler(content_types=['text'])
def get_problem(message):
    state = user_states.get(message.chat.id)
    if not state or not state.get("character"):
        bot.send_message(message.chat.id, "üåô –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /start ‚ú®")
        return

    username = state["name"]
    char_key = state["character"]

    thinking = bot.send_message(message.chat.id, "üåï –°–æ–≤–µ—Ç—á–∏—Ü–∞ –æ–±–¥—É–º—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç... üí´")
    advice = ask_deepseek(char_key, message.text.strip(), username)
    try: bot.delete_message(message.chat.id, thinking.message_id)
    except: pass

    bot.send_message(message.chat.id, f"{advice}\n\nüíñ *–° –ª—é–±–æ–≤—å—é, {CHARACTERS[char_key]['name']}!*", parse_mode='Markdown')

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîÑ –°–º–µ–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="restart"))
    bot.send_photo(message.chat.id, random.choice(CHARACTER_IMAGES[char_key]),
                   caption="‚ú® –õ—É–Ω–Ω–∞—è –º–∞–≥–∏—è –≤—Å–µ–≥–¥–∞ —Å —Ç–æ–±–æ–π! üåô", parse_mode='Markdown', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "restart")
def restart(call):
    start(call.message)

# === –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ï–ñ–ï–î–ù–ï–í–ù–´–• –¶–ò–¢–ê–¢ ===
def run_schedule():
    schedule.every().day.at("10:00").do(send_daily_quotes)
    while True:
        schedule.run_pending()
        time.sleep(1)



# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
if __name__ == "__main__":
    import threading
    threading.Thread(target=run_schedule, daemon=True).start()
    print("üåô Sailor Moon Bot –∑–∞–ø—É—â–µ–Ω! ‚ú®")
    bot.infinity_polling()
